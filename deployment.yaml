apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: service-list-role
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get", "list", "watch"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: service-list-rolebinding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: Role
  name: service-list-role
  apiGroup: rbac.authorization.k8s.io
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: ClusterIP
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_USER
              value: myuser
            - name: POSTGRES_PASSWORD
              value: mypassword
            - name: POSTGRES_DB
              value: whatsapp_db
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  type: NodePort
  ports:
    - port: 5672
      targetPort: 5672
      nodePort: 30072
      name: amqp
    - port: 15672
      targetPort: 15672
      nodePort: 30073
      name: management
  selector:
    app: rabbitmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:4.0.6-management
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: guest
            - name: RABBITMQ_DEFAULT_PASS
              value: guest
          ports:
            - containerPort: 5672
            - containerPort: 15672
---
apiVersion: v1
kind: Service
metadata:
  name: chat-service
spec:
  type: NodePort
  ports:
    - port: 8080
      nodePort: 30080
  selector:
    app: chat-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: chat-service
  template:
    metadata:
      labels:
        app: chat-service
    spec:
      containers:
        - name: chat-service
          image: docker.io/tyrael122/chat-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: message-router-service
spec:
  type: NodePort
  ports:
    - port: 8081
      nodePort: 30081
  selector:
    app: message-router-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-router-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: message-router-service
  template:
    metadata:
      labels:
        app: message-router-service
    spec:
      containers:
        - name: message-router-service
          image: docker.io/tyrael122/message-router-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
